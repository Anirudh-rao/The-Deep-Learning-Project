# -*- coding: utf-8 -*-
"""Basic House Price Prediction

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kiL_PzfDDNhiemgyu9Miupi5o9UQsUJ5

In this exercise you'll try to build a neural network that predicts the price of a house according to a simple formula.

Imagine that house pricing is as easy as:

A house has a base cost of 50k, and every additional bedroom adds a cost of 50k. This will make a 1 bedroom house cost 100k, a 2 bedroom house cost 150k etc.

How would you create a neural network that learns this relationship so that it would predict a 7 bedroom house as costing close to 400k etc.
"""

import tensorflow as tf
import numpy as np
from tensorflow import keras

def model():
  #inputs and labels
  xs = np.array([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], dtype=float)
  ys = np.array([1.0, 1.5, 2.0, 2.5, 3.0, 3.5], dtype=float)

  #Model Variable
  model = keras.Sequential([keras.layers.Dense(units=1, input_shape=[1])])

  #Compiler and Optimzer
  model.compile(optimizer='sgd', loss='mean_squared_error')

  #Train Model
  model.fit(xs, ys, epochs=1000)
  return model

model = model()

new_x = 7.0
prediction  = model.predict([new_x])[0]
print(prediction)